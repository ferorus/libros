<?xml version="1.0" encoding="UTF-8"?>
<!--
	Fichero de configuración de la version 3 
	https://www.ehcache.org/documentation/3.0/xml.html
	
	Para ver algún ejemplo de configuración...
	https://github.com/ehcache/ehcache3-samples/tree/master/jsr107
-->
<config
  xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
  xmlns:jsr107='http://www.ehcache.org/v3/jsr107'
  xmlns='http://www.ehcache.org/v3'>

	<!--  
		https://www.ehcache.org/documentation/3.0/xml.html#service-elements
		Placeholder for services to be managed by the CacheManager and exposed to the Cache instances it manages. Those services will also be lifecycled by the CacheManager.  
	-->
	<service>
		<jsr107:defaults enable-management="true" enable-statistics="true" />
	</service>

	<!--  
		https://www.ehcache.org/documentation/3.0/xml.html#cache-template-elements
		A cache template definition that can be reference in <cache> definitions using the 'uses-template' attribute.  
		<cache-template> elements represent a uniquely named (specified using the mandatory name attribute) template for <cache> elements to inherit from. 
		A <cache> element that references a <cache-template> by its name using the uses-template attribute, will inherit all properties of the <cache-template>. 
		A <cache> can override these properties as it needs.
		A <cache-template> element may contain all the same child elements as a <cache> element.
	-->
	<cache-template name="default">
		<expiry>
			<ttl unit="minutes">60</ttl>
		</expiry>
		<heap unit="entries">100</heap>
	</cache-template>

	<!-- 
		https://www.ehcache.org/documentation/3.0/xml.html#cache-elements
		A <cache> element represent a Cache instance that will be created and managed by the CacheManager. 
		Each <cache> requires the alias attribute, used at runtime to retrieve the corresponding Cache<K, V> instance using the org.ehcache.CacheManager.getCache(String, Class<K>, Class<V>) method. 
		The optional uses-template attribute, lets you reference a <cache-template> element’s name attribute. 
	 -->
	<cache alias="default-query-results-region">
		<expiry>
			<ttl unit="minutes">60</ttl>
		</expiry>
		<heap unit="entries">1000</heap>
	</cache>

	<!-- https://stackoverflow.com/questions/67993442/hhh90001006-missing-cachedefault-update-timestamps-region-was-created-on-the 
		Esta configuracion me resuelve el problema de java.lang.IllegalStateException: 
		Cache[default-update-timestamps-region] is closed
	-->
	<cache alias="default-update-timestamps-region">
		<expiry>
			<none />
		</expiry>
		<heap unit="entries">1000</heap>
	</cache>
	
	<cache alias="ExchangeRate">
		<resources>
			<heap unit="entries">2000</heap>
			<offheap unit="MB">100</offheap>
		</resources>
	</cache>
	
</config>
